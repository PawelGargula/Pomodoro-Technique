* {
  box-sizing: border-box;
}

:root {
  /* Set font-size to 10px, so then i have easier calculation on rem unit */
  font-size: 10px;
  /* Set variables */
  --italian-green-color: hsl(150, 100%, 26%);
  --italian-red-color: hsl(357, 72%, 47%);
  --italian-white-color: hsl(72, 20%, 95%);
  --light-tomato-color: hsla(9, 100%, 64%, 0.8);
  --button-color: ;
  --clock-animation: 2.5s 4s 1;
  --blink-caret-color: white;
}

/* Make flag of Italy as page background, using html element and its pseudo elemants */
html {
  display: flex;
  min-height: 100vh;
  min-width: 100vw;
}

html::before,
html::after {
  content: "";
  flex: 1 2rem;
}

html::before {
  background-color: var(--italian-green-color);
}

html::after {
  background-color: var(--italian-red-color);
}

body {
  align-items: center;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  font-family: "Orbitron", sans-serif;
  justify-content: space-between;
  /* Reset default margin */
  margin: 0;
  overflow-x: hidden;
}

h1 {
  color: var(--italian-green-color);
  font-size: 2rem;
  letter-spacing: .1rem;
  /* Reset default margin */
  margin-bottom: 0;
  text-align: center;
}

h1 > a {
  animation: jump 2.4s 1s 1;
  color: var(--italian-green-color);
  /* Set "display: inline-block" for jump animation working */
  display: inline-block;
  text-decoration: none;
}

a:focus-visible {
  outline: .2rem dashed tomato;
}

a:hover {
  color: tomato;
}

@keyframes jump {
  10% {
    transform: translate(0%, 10%) scale(1, 0.7)
  }

  25% {
    transform: translate(0%, -50%) scale(1, 1);
  }

  30% {
    transform: translate(0%, -50%) rotate(1deg);
  }

  35% {
    transform: translate(0%, -50%) rotate(-1deg);
  }

  40% {
    transform: translate(0%, -50%) rotate(1deg);
  }

  45% {
    transform: translate(0%, -50%) rotate(-1deg);
  }

  50% {
    transform: translate(0%, -50%) scale(1, 1);
    color: tomato
  }

  70% {
    transform: translate(0%, 10%) scale(1, 0.7);
  }

  90% {
    transform: translate(0%, 0%) scale(1, 1);
  }
}

section {
  display: grid;
  --gap: 1.5rem;
  gap: var(--gap);
  grid-template-areas:
    "header header header"
    ". counter ."
    "clock clock clock"
    ". start-stop ."
    ". reset ."
    "message message message";
  grid-template-columns: repeat(3, 1fr);
  text-align: center;
  margin: 0 2rem;
}

section header {
  grid-area: header;
}

h2 {
  font-size: 1.9rem;
  letter-spacing: .1rem;
}

#counter {
  background-color: var(--light-tomato-color);
  --border-size: .2rem;
  border-left: var(--border-size) solid black;
  border-right: var(--border-size) solid black;
  border-top: var(--border-size) solid black;
  color: black;
  font-size: 1.2rem;
  grid-area: counter;
  /* Stick counter to the clock, removing gap by negative margin bottom  */
  margin-bottom: calc(-1 * var(--gap));
  /* Get counter out of clock's "box-shadow" property */
  z-index: 1;
}

#clock {
  background-color: var(--light-tomato-color);
  border: .3rem solid black;
  box-shadow: .1rem 0px 1rem 0 rgba(50, 50, 50, 1);
  -moz-box-shadow: .1rem 0 1rem 0 rgba(50, 50, 50, 1);
  -webkit-box-shadow: .1rem 0 1rem 0 rgba(50, 50, 50, 1);
  color: black;
  display: flex;
  justify-content: center;
  flex-flow: row wrap;
  font-family: "Courier New", Courier, monospace;
  font-size: 6.5rem;
  grid-area: clock;
  padding: 0;
  /* Relative for its pseudo elements: "before" and "after" */
  position: relative;
  transition-duration: 0.3s;
}

#clock:focus-visible {
  background-image: repeating-linear-gradient(-45deg,
      transparent 0 3rem,
      rgba(255, 255, 255, 0.5) 3rem 6rem);
}

#clock:hover {
  background-color: tomato;
  box-shadow: .1rem 0 1.5rem 0 rgba(50, 50, 50, 1);
  -moz-box-shadow: .1rem 0 1.5rem 0 rgba(50, 50, 50, 1);
  -webkit-box-shadow: .1rem 0 1.5rem 0 rgba(50, 50, 50, 1);
  cursor: pointer;
}

/* Need background for text animation (Without it, text will be blend with clock's time) */
#clock::before {
  animation: show-bg var(--clock-animation);
  background-color: var(--light-tomato-color);
  content: "";
  left: 0;
  position: absolute;
}

@keyframes show-bg {

  from,
  to {
    min-width: 100%;
    min-height: 100%;
  }
}

#clock::after {
  animation: type-text var(--clock-animation), blink-caret .75s step-end infinite;
  /* Need for blink-caret animation */
  border-right: .2rem solid var(--blink-caret-color);
  color: white;
  content: "";
  position: absolute;
}

@keyframes type-text {
  0% {
    content: "S";
  }

  7% {
    content: "Se";
  }

  14% {
    content: "Set";
  }

  21% {
    content: "Set\00a0";
  }

  28% {
    content: "Set T";
  }

  35% {
    content: "et Ti";
  }

  42% {
    content: "t Tim";
  }

  49% {
    content: "\00a0Time";
  }

  56% {
    content: "Timer";
  }

  100% {
    content: "Timer";
  }
}

@keyframes blink-caret {

  from,
  to {
    border-color: transparent
  }

  50% {
    border-color: var(--blink-caret-color);
  }
}

#start-stop {
  grid-area: start-stop;
}

#reset {
  grid-area: reset;
}

#start-stop,
#reset {
  background-color: hsla(var(--button-color), 0.2);
  border: .2rem solid black;
  border-radius: .4rem;
  box-shadow: .1rem 0 .5rem 0 rgba(50, 50, 50, 1);
  -moz-box-shadow: 0.1rem 0 .5rem 0 rgba(50, 50, 50, 1);
  -webkit-box-shadow: .1rem 0 .5rem 0 rgba(50, 50, 50, 1);
  cursor: pointer;
  font-family: "Orbitron", sans-serif;
  font-size: 2.6rem;
  padding: 0 .7rem;
  transition-duration: 0.3s;
}

#start-stop:focus-visible,
#reset:focus-visible {
  background-image: repeating-linear-gradient(-45deg,
      transparent 0 1rem,
      white 1rem 2rem);
}

#start-stop:hover,
#reset:hover {
  background-color: hsla(var(--button-color), 0.4);
  box-shadow: .1rem 0 1rem 0 rgba(50, 50, 50, 1);
  -moz-box-shadow: .1rem 0 1rem 0 rgba(50, 50, 50, 1);
  -webkit-box-shadow: .1rem 0 1rem 0 rgba(50, 50, 50, 1);
}

.start {
  --button-color: 122, 39%, 49%;
}

.stop {
  --button-color: 4, 90%, 58%;
}

#reset {
  --button-color: 195, 100%, 36%;
}

#message {
  grid-area: message;
  font-size: 1.6rem;
  letter-spacing: .1rem;
}

.footer {
  color: var(--italian-red-color);
  font-size: 1.2rem;
  letter-spacing: .1rem;
  text-align: center;
}
@media screen and (min-width: 320px) {
  #clock {
    font-size: 8rem;
  }
}

@media screen and (min-width: 640px) and (min-height: 640px)  {
  :root {
    font-size: 14px;
  }
}