{"mappings":"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","sources":["node_modules/@swc/helpers/src/_define_property.mjs","src/js/elements/alarm.js","src/js/elements/message.js","src/js/elements/counter.js","src/js/elements/startStopButton.js","src/js/elements/seconds.js","src/js/elements/minutes.js","src/js/elements/clock.js","src/js/localStorage.js","src/js/countdownTimer.js","src/js/elements/resetButton.js","src/main.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","//sound from https://freesound.org/s/22627/\r\nclass Alarm extends Audio {\r\n    name = 'alarm';\r\n    path = `sound/${this.name}.flac`;\r\n    \r\n    // for IndexedDB\r\n    db = {\r\n        name: 'audios_db',\r\n        objectStore: {\r\n            name: 'audios_os',\r\n            keyPath: 'name',\r\n            indexName: 'flacBlob',\r\n            record: {\r\n                name: this.name,\r\n                flacBlob: null\r\n            }\r\n        }\r\n    }\r\n    \r\n    play3Times() {\r\n        this.play();\r\n        let counter = 1;\r\n        this.onended = function () {\r\n            if (counter < 3) {\r\n                counter++;\r\n                this.play();\r\n            }\r\n        };\r\n    }\r\n} \r\n\r\nexport const alarm = new Alarm(\"\");\r\n\r\n// Store .flac file (blob) in IndexedDB\r\n// Create an instance of a db object for us to store our database in\r\nlet db;\r\n\r\nconst request = window.indexedDB.open(alarm.db.name, 1);\r\n\r\nrequest.addEventListener('error', () => console.error('Database failed to open'));\r\n\r\nrequest.addEventListener('success', () => {\r\n    console.log('Database opened successfully');\r\n\r\n    db = request.result;\r\n    init();\r\n});\r\n\r\n// Setup the database tables if this has not already have been done\r\nrequest.addEventListener('upgradeneeded', e => {\r\n    \r\n    // Grab a reference to the opened database\r\n    const db = e.target.result;\r\n\r\n    const objectStore = db.createObjectStore(alarm.db.objectStore.name, { keyPath: alarm.db.objectStore.keyPath });\r\n\r\n    // Define what data items the objectStore will contain (table collumns)\r\n    objectStore.createIndex(alarm.db.objectStore.indexName, \r\n        alarm.db.objectStore.indexName,\r\n        { unique: false }\r\n    );\r\n\r\n    console.log('Database setup complete');\r\n});\r\n\r\nfunction init() {\r\n    const objectStore = db.transaction(alarm.db.objectStore.name)\r\n                          .objectStore(alarm.db.objectStore.name);\r\n\r\n    const request = objectStore.get(alarm.name);\r\n    request.addEventListener('success', () => {\r\n        if(request.result) {\r\n            console.log('Taking audio from IDB');\r\n            setAudioSrc(request.result[alarm.db.objectStore.indexName]);\r\n        } else {\r\n            fetchAudioFromNetwork();\r\n        }\r\n    });\r\n}\r\n\r\nfunction setAudioSrc(flacBlob) {\r\n    const flacURL = URL.createObjectURL(flacBlob);\r\n    alarm.src = flacURL;\r\n}\r\n\r\nfunction fetchAudioFromNetwork() {\r\n    console.log(\"Fetching audio from network\");\r\n\r\n    fetch(alarm.path).then(response => response.blob()).then(flacBlob => {\r\n        setAudioSrc(flacBlob);\r\n\r\n        storeAudio(flacBlob);\r\n    });\r\n}\r\n\r\nfunction storeAudio(flacBlob) {\r\n    const objectStore = db.transaction(alarm.db.objectStore.name, 'readwrite')\r\n                          .objectStore(alarm.db.objectStore.name);\r\n    \r\n    alarm.db.objectStore.record.flacBlob = flacBlob;\r\n    const record = alarm.db.objectStore.record;\r\n\r\n    const request = objectStore.add(record);\r\n\r\n    request.addEventListener('success', () => console.log('Record additon attempt finished'));\r\n    request.addEventListener('error', () => console.error(request.error));\r\n}","export const message = {\r\n    handle: document.getElementById(\"message\"),\r\n    writingNow: false,\r\n    erasingNow: false,\r\n    animationSpeed: 90,\r\n    hiddenMessageHandle: document.querySelector(\"#hidden-message\"),\r\n\r\n    show(counterValue) {\r\n        if (counterValue < 4) {\r\n            const messageAboutShortBreak = \"Time for short break (3 to 5min)\";\r\n            this.write(messageAboutShortBreak);\r\n        }\r\n        else {\r\n            const messageAboutLongBreak = \"Time for long break (15 to 30min)\";\r\n            this.write(messageAboutLongBreak);\r\n        }\r\n    },\r\n\r\n    write(text) {\r\n        document.title = text;\r\n        this.hiddenMessageHandle.innerText = text;\r\n        this.handle.innerHTML = \"\";\r\n        this.writingNow = true;\r\n        [...text].forEach((letter, index) => {\r\n            setTimeout(() => {\r\n                this.handle.innerHTML += letter;\r\n                if (this.handle.innerHTML === text)\r\n                    this.writingNow = false;\r\n            }, index * this.animationSpeed)\r\n        });\r\n    },\r\n\r\n    erase() {\r\n        this.hiddenMessageHandle.innerText = \"\";\r\n        if (!this.erasingNow && this.handle.innerHTML !== \"\") {\r\n            this.erasingNow = true;\r\n            let eraser = setInterval(() => {\r\n                if (!this.writingNow)\r\n                    this.handle.innerHTML = this.handle.innerHTML.slice(0, -1);\r\n                if (this.handle.innerHTML === \"\") {\r\n                    clearInterval(eraser);\r\n                    this.erasingNow = false;\r\n                }\r\n            }, this.animationSpeed);\r\n        }\r\n    }\r\n}","export const counter = {\r\n    handle: document.getElementById(\"counter\"),\r\n\r\n    update() {\r\n        if (this.value >= 4)\r\n            this.handle.innerText = \"Counter: 1\";\r\n        else\r\n            this.handle.innerText = `Counter: ${this.value + 1}`;\r\n    },\r\n\r\n    get value() {\r\n        let value = this.handle.innerText.replace(\"Counter: \", \"\");\r\n        value = parseInt(value, 10);\r\n        if (isNaN(value) || value < 1 || minutes > 4)\r\n            return 1;\r\n        return value;\r\n    }\r\n}","export const startStopButton = {\r\n    handle: document.getElementById(\"start-stop\"),\r\n\r\n    updateToStop() {\r\n        this.handle.className = \"stop\";\r\n        this.handle.innerText = \"Stop\";\r\n        this.handle.ariaLabel = \"Stop the timer\";\r\n    },\r\n\r\n    updateToStart() {\r\n        this.handle.className = \"start\";\r\n        this.handle.innerText = \"Start\";\r\n        this.handle.ariaLabel = \"Start the timer\";\r\n    }\r\n}","export const seconds = {\r\n    handle: document.getElementById(\"seconds\"),\r\n\r\n    countToMiliseconds() {\r\n        return this.value * 1000;\r\n    },\r\n\r\n    get value() {\r\n        let value = parseInt(this.handle.innerText, 10);\r\n        if (isNaN(value) || value < 0 || value > 59) \r\n            return 0;\r\n        return value;\r\n    },\r\n\r\n    countToClockSeconds(miliseconds) {\r\n        return Math.floor((miliseconds % (1000 * 60)) / 1000);\r\n    },\r\n\r\n    update(value) {\r\n        this.handle.innerText = value.toString().padStart(2, \"0\");\r\n    }\r\n}","export const minutes = {\r\n    handle: document.getElementById(\"minutes\"),\r\n\r\n    countToMiliseconds() {\r\n        return this.value * 1000 * 60;\r\n    },\r\n\r\n    get value() {\r\n        let value = parseInt(this.handle.innerText, 10);\r\n        if (isNaN(value) || value < 0 || value > 99)\r\n            return value = 25;\r\n        return value;\r\n    },\r\n\r\n    countToClockMinutes(miliseconds) {\r\n        return Math.floor(miliseconds / (1000 * 60));\r\n    },\r\n\r\n    update(value) {\r\n        this.handle.innerText = value.toString().padStart(2, \"0\");\r\n    }\r\n}","export const clock = {\r\n    handle: document.getElementById(\"clock\"),\r\n\r\n    updateAriaLabel(minutes, seconds) {\r\n        this.handle.ariaLabel = `${minutes} minutes and ${seconds} seconds remaining`;\r\n    }\r\n}","export let lStorage = {\r\n    minutesKey: \"minutes\",\r\n\r\n    getMinutes() {\r\n        if (!isStorageSupported())\r\n            return 25;\r\n\r\n        let minutes = localStorage.getItem(this.minutesKey);\r\n        return minutes === null ? 25 : Number(minutes);\r\n    },\r\n\r\n    setMinutes(value) {\r\n        if (!isStorageSupported())\r\n            return;\r\n\r\n        localStorage.setItem(this.minutesKey, value);\r\n    }\r\n}\r\n\r\nfunction isStorageSupported() {\r\n    try {\r\n        localStorage.setItem(\"test\", \"test\");\r\n        localStorage.removeItem(\"test\");\r\n        return true;\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n}","import { alarm } from \"./elements/alarm.js\";\r\nimport { message } from \"./elements/message.js\";\r\nimport { counter } from \"./elements/counter.js\";\r\nimport { startStopButton } from \"./elements/startStopButton.js\";\r\nimport { seconds } from \"./elements/seconds.js\";\r\nimport { minutes } from \"./elements/minutes.js\";\r\nimport { clock } from \"./elements/clock.js\";\r\nimport { lStorage } from \"./localStorage.js\";\r\n\r\nexport const countdownTimer = {\r\n    minutesFromUser: lStorage.getMinutes(),\r\n    timerInterval: null,\r\n    stopped: true,\r\n\r\n    startOrStop() {\r\n        if (this.stopped) this.start();\r\n        else this.stop();\r\n    },\r\n\r\n    start() {\r\n        this.stopped = false;\r\n        startStopButton.updateToStop();\r\n        message.erase();\r\n        //Give a few miliseconds for program so then it can update clockElement correct after first second from start\r\n        let timeEnd =\r\n            this.now +\r\n            minutes.countToMiliseconds() +\r\n            seconds.countToMiliseconds() +\r\n            30;\r\n        this.timerInterval = setInterval(() => this.update(timeEnd), 1000);\r\n    },\r\n\r\n    get now() {\r\n        return new Date().getTime();\r\n    },\r\n\r\n    update(timeEnd) {\r\n        let distanceToTimeEnd = timeEnd - this.now;\r\n        this.updateClock(distanceToTimeEnd);\r\n        this.updatePageTitle();\r\n\r\n        if (distanceToTimeEnd < 1) {\r\n            this.reset();\r\n            alarm.play3Times();\r\n            message.show(counter.value);\r\n            counter.update();\r\n        }\r\n    },\r\n\r\n    updateClock(miliseconds) {\r\n        let sec = seconds.countToClockSeconds(miliseconds);\r\n        seconds.update(sec);\r\n        let min = minutes.countToClockMinutes(miliseconds);\r\n        minutes.update(min);\r\n        clock.updateAriaLabel(min, sec);\r\n    },\r\n\r\n    updatePageTitle() {\r\n        document.title = `${clock.handle.innerText} - Pomodoro Timer`;\r\n    },\r\n\r\n    reset() {\r\n        minutes.update(this.minutesFromUser);\r\n        seconds.update(0);\r\n        clock.updateAriaLabel(this.minutesFromUser, 0);\r\n        this.stop();\r\n        this.updatePageTitle();\r\n    },\r\n\r\n    stop() {\r\n        this.stopped = true;\r\n        clearInterval(this.timerInterval);\r\n        startStopButton.updateToStart();\r\n    },\r\n\r\n    set() {\r\n        let minutes = prompt(\"Enter minutes (1 to 99)\", this.minutesFromUser);\r\n        if (minutes === null) return;\r\n\r\n        minutes = parseInt(minutes, 10);\r\n        if (isNaN(minutes) || minutes < 1 || minutes > 99)\r\n            alert(\"Wrong number, must be between 1 and 99\");\r\n        else {\r\n            this.minutesFromUser = minutes;\r\n            lStorage.setMinutes(minutes);\r\n            this.reset();\r\n        }\r\n    }\r\n}","export const resetButton = {\r\n    handle: document.getElementById(\"reset\")\r\n}","import { countdownTimer } from \"./js/countdownTimer.js\";\r\nimport { startStopButton } from \"./js/elements/startStopButton.js\";\r\nimport { resetButton } from \"./js/elements/resetButton.js\";\r\nimport { clock } from \"./js/elements/clock.js\";\r\nimport { minutes } from \"./js/elements/minutes.js\";\r\n\r\nminutes.update(countdownTimer.minutesFromUser);\r\nclock.updateAriaLabel(countdownTimer.minutesFromUser, 0);\r\n\r\nstartStopButton.handle.addEventListener(\"click\", () =>\r\n    countdownTimer.startOrStop()\r\n);\r\n\r\nresetButton.handle.addEventListener(\"click\", () => countdownTimer.reset());\r\n\r\nclock.handle.addEventListener(\"click\", () => countdownTimer.set());\r\n\r\nconst registerServiceWorker = async () => {\r\n    if ('serviceWorker' in navigator) {\r\n        try {\r\n            // path needs to be written relative to the origin, app's root directory\r\n            const registration = await navigator.serviceWorker.register(`${location.href}sw.js`);\r\n            if (registration.installing) {\r\n                console.log('Service worker installing');\r\n            } else if (registration.waiting) {\r\n                console.log('Service worker installed');\r\n            } else if (registration.active) {\r\n                console.log('Service worker active');\r\n            }\r\n        } catch (error) {\r\n            console.error(`Registration failed with ${error}`);\r\n        }\r\n    }\r\n};\r\n\r\nregisterServiceWorker();"],"names":["$bb9a5d09fff8458d$export$2e2bcd8739ae039","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$2923481bf48f3160$var$Alarm","Audio","play3Times","this","play","counter","onended","name","objectStore","keyPath","indexName","record","flacBlob","$2923481bf48f3160$export$2f694dec4cc371c2","$2923481bf48f3160$var$db","$2923481bf48f3160$var$request","window","indexedDB","open","db","$2923481bf48f3160$var$setAudioSrc","flacURL","URL","createObjectURL","src","addEventListener","console","error","log","result","request","transaction","get","fetch","path","then","response","blob","add","$2923481bf48f3160$var$storeAudio","$2923481bf48f3160$var$init","e","target","createObjectStore","createIndex","unique","$483592b1df7514d1$export$a8ecead220dd38a6","handle","document","getElementById","writingNow","erasingNow","animationSpeed","hiddenMessageHandle","querySelector","show","counterValue","messageAboutShortBreak","write","messageAboutLongBreak","text","title","innerText","innerHTML","forEach","letter","index","setTimeout","erase","eraser","setInterval","slice","clearInterval","$28f378a94ce73645$export$e575061ef2a070eb","update","replace","parseInt","isNaN","minutes","$69e1f1bbc6759d07$export$2ca13070e7004c3d","updateToStop","className","ariaLabel","updateToStart","$f86d65844a96447b$export$4792e48abc550fa1","countToMiliseconds","countToClockSeconds","miliseconds","Math","floor","toString","padStart","$10303697619a9dbe$export$666252b437cce0c7","countToClockMinutes","$a1212faeba12b1f5$export$8c9e255416017e56","updateAriaLabel","seconds","$2338c8cd734f85a6$export$c376c5c2f4a9faa0","minutesKey","getMinutes","$2338c8cd734f85a6$var$isStorageSupported","localStorage","getItem","Number","setMinutes","setItem","removeItem","err","$cce9d3e3a8965fbf$export$9e18a2ab97f66ec3","minutesFromUser","timerInterval","stopped","startOrStop","start","stop","timeEnd","now","Date","getTime","distanceToTimeEnd","updateClock","updatePageTitle","reset","sec","min","set","prompt","alert","$3f8b38263905094d$export$69181d24bfc61261","async","navigator","registration","serviceWorker","register","location","href","installing","waiting","active","$aa459f0fea9822fe$var$registerServiceWorker"],"version":3,"file":"index.b95a201c.js.map"}